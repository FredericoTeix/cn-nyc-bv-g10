//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: trips.proto

package trips;

@kotlin.jvm.JvmSynthetic
public inline fun updateTripRequest(block: trips.UpdateTripRequestKt.Dsl.() -> kotlin.Unit): trips.TripsOuterClass.UpdateTripRequest =
  trips.UpdateTripRequestKt.Dsl._create(trips.TripsOuterClass.UpdateTripRequest.newBuilder()).apply { block() }._build()
public object UpdateTripRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: trips.TripsOuterClass.UpdateTripRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: trips.TripsOuterClass.UpdateTripRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): trips.TripsOuterClass.UpdateTripRequest = _builder.build()

    /**
     * <code>.trips.TripID trip_id = 1;</code>
     */
    public var tripId: trips.TripsOuterClass.TripID
      @JvmName("getTripId")
      get() = _builder.getTripId()
      @JvmName("setTripId")
      set(value) {
        _builder.setTripId(value)
      }
    /**
     * <code>.trips.TripID trip_id = 1;</code>
     */
    public fun clearTripId() {
      _builder.clearTripId()
    }
    /**
     * <code>.trips.TripID trip_id = 1;</code>
     * @return Whether the tripId field is set.
     */
    public fun hasTripId(): kotlin.Boolean {
      return _builder.hasTripId()
    }

    /**
     * <code>.trips.Trip trip = 2;</code>
     */
    public var trip: trips.TripsOuterClass.Trip
      @JvmName("getTrip")
      get() = _builder.getTrip()
      @JvmName("setTrip")
      set(value) {
        _builder.setTrip(value)
      }
    /**
     * <code>.trips.Trip trip = 2;</code>
     */
    public fun clearTrip() {
      _builder.clearTrip()
    }
    /**
     * <code>.trips.Trip trip = 2;</code>
     * @return Whether the trip field is set.
     */
    public fun hasTrip(): kotlin.Boolean {
      return _builder.hasTrip()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun trips.TripsOuterClass.UpdateTripRequest.copy(block: trips.UpdateTripRequestKt.Dsl.() -> kotlin.Unit): trips.TripsOuterClass.UpdateTripRequest =
  trips.UpdateTripRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()
