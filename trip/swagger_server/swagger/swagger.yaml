openapi: 3.0.1
info:
  title: NYC Trips
  description: >-
    This service is built to serve data about the value of businesses and
    locations in New York City
  version: 1.0.0
paths:
  /trip:
    post:
      tags:
        - Trip
      summary: Add a trip to the data used to calculate the value
      operationId: add_trip
      requestBody:
        description: A JSON object containing trip information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trip'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
      x-openapi-router-controller: swagger_server.controllers.rest_controller
  /trip/{trip_id}:
    put:
      tags:
        - Trip
      summary: Change a trip in the data used to calculate the value
      operationId: update_trip
      parameters:
        - name: trip_id
          in: path
          description: ID of the trip to delete
          required: true
          schema:
            type: string
      requestBody:
        description: A JSON object containing trip information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TripUpdate'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: A trip with the specified ID was not found.
      x-openapi-router-controller: swagger_server.controllers.rest_controller
    delete:
      tags:
        - Trip
      summary: Remove a trip in the data used to calculate the value
      operationId: remove_trip
      parameters:
        - name: trip_id
          in: path
          description: ID of the trip to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '404':
          description: A trip with the specified ID was not found.
      x-openapi-router-controller: swagger_server.controllers.rest_controller
  /trip/location/{location_id}:
    get:
      tags:
        - Trip
      summary: Find location description by ID
      description: Returns LocationID object.
      operationId: get_location_by_id
      parameters:
        - name: location_id
          in: path
          description: The ID of the Location to return.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '404':
          description: A location with the specified ID was not found.
      x-openapi-router-controller: swagger_server.controllers.rest_controller
  /tripCount/location/{location_id}:
    get:
      tags:
        - Trip
      summary: >-
        Get the number of trips between pickup_datetime and dropoff_datetime in
        a given location.
      description: Returns an array of Trip objects.
      operationId: get_trips_count
      parameters:
        - name: location_id
          in: path
          description: The ID of the Location
          required: true
          schema:
            type: integer
        - $ref: '#/components/parameters/start_date'
        - $ref: '#/components/parameters/end_date'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: integer
        '404':
          description: A location with the specified ID was not found.
      x-openapi-router-controller: swagger_server.controllers.rest_controller
components:
  schemas:
    Trip:
      type: object
      properties:
        pickup_datetime:
          type: string
          format: date-time
        dropoff_datetime:
          type: string
          format: date-time
        pickup_location_id:
          type: number
        dropoff_location_id:
          type: number
        passenger_count:
          type: number
          default: 1
      required:
        - pickup_datetime
        - dropoff_datetime
        - pickup_location_id
        - dropoff_location_id
        - passenger_count
    TripUpdate:
      type: object
      properties:
        pickup_datetime:
          type: string
          format: date-time
        dropoff_datetime:
          type: string
          format: date-time
        pickup_location_id:
          type: number
        dropoff_location_id:
          type: number
        passenger_count:
          type: number
          default: 1
    Trips:
      type: array
      items:
        $ref: '#/components/schemas/Trip'
    Location:
      type: object
      properties:
        location_id:
          type: integer
        borough:
          type: string
        zone:
          type: string
        service_zone:
          type: string
      required:
        - location_id
        - borough
        - zone
        - service_zone
  parameters:
    start_date:
      name: start_date
      in: query
      description: >-
        Every value data up to this date will be filtered out. If not specified
        no filtering is applied
      schema:
        type: string
        format: date-time
    end_date:
      name: end_date
      in: query
      description: >-
        Every value data after this date will be filtered out. If not specified
        no filtering is applied
      schema:
        type: string
        format: date-time
    limit:
      name: limit
      in: query
      description: Number of elements to be returned
      schema:
        type: integer
        minimum: 0
tags:
  - name: Trip
    description: Everything about trip records
externalDocs:
  description: Businesses categories documentation
  url: https://apidocs.geoapify.com/docs/places/#categories
